/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  type ParsedAddIdentityInstruction,
  type ParsedClosePolicyInstruction,
  type ParsedCreatePolicyInstruction,
  type ParsedRemoveIdentityInstruction,
  type ParsedReplaceIdentityInstruction,
} from '../instructions';
import { Kind } from '../types';

export const SHIELD_PROGRAM_ADDRESS =
  'b1ockYL7X6sGtJzueDbxRVBEEPN4YeqoLW276R3MX8W' as Address<'b1ockYL7X6sGtJzueDbxRVBEEPN4YeqoLW276R3MX8W'>;

export enum ShieldAccount {
  Policy,
}

export function identifyShieldAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): ShieldAccount {
  const data = 'data' in account ? account.data : account;
  if (containsBytes(data, getU8Encoder().encode(Kind.Policy), 0)) {
    return ShieldAccount.Policy;
  }
  throw new Error(
    'The provided account could not be identified as a shield account.'
  );
}

export enum ShieldInstruction {
  CreatePolicy,
  AddIdentity,
  RemoveIdentity,
  ReplaceIdentity,
  ClosePolicy,
}

export function identifyShieldInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): ShieldInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return ShieldInstruction.CreatePolicy;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return ShieldInstruction.AddIdentity;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return ShieldInstruction.RemoveIdentity;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return ShieldInstruction.ReplaceIdentity;
  }
  if (containsBytes(data, getU8Encoder().encode(4), 0)) {
    return ShieldInstruction.ClosePolicy;
  }
  throw new Error(
    'The provided instruction could not be identified as a shield instruction.'
  );
}

export type ParsedShieldInstruction<
  TProgram extends string = 'b1ockYL7X6sGtJzueDbxRVBEEPN4YeqoLW276R3MX8W',
> =
  | ({
      instructionType: ShieldInstruction.CreatePolicy;
    } & ParsedCreatePolicyInstruction<TProgram>)
  | ({
      instructionType: ShieldInstruction.AddIdentity;
    } & ParsedAddIdentityInstruction<TProgram>)
  | ({
      instructionType: ShieldInstruction.RemoveIdentity;
    } & ParsedRemoveIdentityInstruction<TProgram>)
  | ({
      instructionType: ShieldInstruction.ReplaceIdentity;
    } & ParsedReplaceIdentityInstruction<TProgram>)
  | ({
      instructionType: ShieldInstruction.ClosePolicy;
    } & ParsedClosePolicyInstruction<TProgram>);
